version: 2
jobs:
  test-3.9: &full-test-template
    docker:
      - image: circleci/python:3.9

    working_directory: ~/repo

    steps:

      - checkout

      - run:
          name: create virtualenv
          command: |
            python -m virtualenv env

      - run: &install-dependencies-template
          name: install dependencies
          command: |
            . env/bin/activate
            python --version
            pip install .
        
      - run: &run-tests-template
          name: run unittests
          command: |
            . env/bin/activate
            python --version
            python -m unittest discover

  test-3.8:
    <<: *full-test-template
    docker:
      - image: circleci/python:3.8

  test-3.7:
    <<: *full-test-template
    docker:
      - image: circleci/python:3.7

  test-3.6:
    <<: *full-test-template
    docker:
      - image: circleci/python:3.6

  test-osx-3.9: &osx-tests-template
    macos:
      xcode: "12.2.0"
    environment:
      PYTHON: 3.9.0
      HOMEBREW_NO_AUTO_UPDATE: 1

    working_directory: ~/repo

    steps: 
      - checkout

      - run: 
          name: install pyenv
          command: |
            brew install pyenv

      - restore_cache:
          key: v2-pyenv-{{ .Environment.CIRCLE_JOB }}-xcode-12.2.0

      - run:
          name: install python
          command: |
            pyenv install $PYTHON -s

      - save_cache:
          paths:
            - ~/.pyenv
          key: v2-pyenv-{{ .Environment.CIRCLE_JOB }}-xcode-12.2.0

      - run:
          name: create virtualenv
          command: |
            eval "$(pyenv init -)"
            pyenv local $PYTHON
            python -m pip install virtualenv
            python -m virtualenv env

      - run: *install-dependencies-template
        
      - run: *run-tests-template

  test-osx-3.8:
    <<: *osx-tests-template
    environment:
      PYTHON: 3.8.6
      HOMEBREW_NO_AUTO_UPDATE: 1

  test-osx-3.7:
    <<: *osx-tests-template
    environment:
      PYTHON: 3.7.9
      HOMEBREW_NO_AUTO_UPDATE: 1

  test-osx-3.6:
    <<: *osx-tests-template
    environment:
      PYTHON: 3.6.12
      HOMEBREW_NO_AUTO_UPDATE: 1

  test-doctest:
    docker:
      - image: circleci/python:3.7-stretch # as of march 2019 RTD uses 3.7

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: initialize submodules
          command: |
            git submodule init
            git submodule update

      - run:
          name: create virtualenv
          command: |
            python -m virtualenv env

      - run: *install-dependencies-template

      - run:
          name: install docs requirements
          command: |
            . env/bin/activate
            pip install -r docs/requirements.txt

      - run:
          name: build the docs
          command: |
            . env/bin/activate
            make -C docs/ html

      - store_artifacts:
          path: ./docs/_build/html

      - run:
          name: doctest
          command: |
            . env/bin/activate
            make -C docs/ doctest
      - run:
          name: linkcheck
          command: |
            . env/bin/activate
            make -C docs/ linkcheck || true

  deploy:
    docker:
      - image: circleci/python:3.7

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: create virtualenv
          command: |
            python -m virtualenv env

      - run:
          name: verify version matches tag
          command: |
            . env/bin/activate
            pip install .
            echo $CIRCLE_TAG
            [[ "$(pip show dwave-ocean-sdk 2>/dev/null | grep Version)" == "Version: $CIRCLE_TAG" ]]

      - run:
          name: build sdist and bdist
          command: |
            . env/bin/activate
            python setup.py sdist
            python setup.py bdist_wheel

      - run:
          name: upload
          command: |
            . env/bin/activate
            pip install twine
            twine upload -u "$PYPI_USERNAME" -p "$PYPI_PASSWORD" --skip-existing ./dist/*

  black-duck:
    docker:
      - image: circleci/openjdk:8-jdk-browsers

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: install python3
          command: |
            sudo apt-get update
            sudo apt-get install build-essential
            sudo apt-get install python3 python3-pip python3-dev python3-virtualenv

      - run:
          name: create virtual env
          command: |
            python3 -m virtualenv env -p python3

      - run:
          name: install package
          command: |
            . env/bin/activate
            pip install .

      - run:
          name: install and run hub-detect
          command: |
            . env/bin/activate
            bash <(curl -s -L https://detect.synopsys.com/detect.sh) --blackduck.url="$BLACKDUCK_URL" --blackduck.api.token="$BLACKDUCK_TOKEN" --detect.code.location.name=dwave-ocean-sdk-circleci --diagnostic --logging.level.detect=DEBUG

      - store_artifacts:
          path: ~/blackduck/runs/


workflows:
  version: 2

  test:
    jobs:
      - test-3.9
      - test-3.8
      - test-3.7
      - test-3.6
      - test-osx-3.9
      - test-osx-3.8
      - test-osx-3.7
      - test-osx-3.6
      - test-doctest

  deploy:
    jobs:
      - deploy:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - test-3.9
      - test-3.8
      - test-3.7
      - test-3.6
      - test-osx-3.9
      - test-osx-3.8
      - test-osx-3.7
      - test-osx-3.6
      - test-doctest
      - black-duck
