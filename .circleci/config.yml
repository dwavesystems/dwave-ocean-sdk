version: 2
jobs:
  test-3.8: &full-test-template
    docker:
      - image: circleci/python:3.8-buster

    working_directory: ~/repo

    steps:

      - checkout

      - run: &install-boost-linux-template
          name: install boost
          command: |
            sudo apt-get install libboost-dev

      - run:
          name: install swig
          command: |
            sudo apt-get install swig

      - run:
          name: create virtualenv
          command: |
            python -m virtualenv env

      - run: &initialize-submodules
          name: initialize submodules
          command: |
            git submodule init
            git submodule update

      - run: &install-dwave-inspector-dependencies
          name: install dwave-inspector dependencies
          command: |
            . env/bin/activate
            pip install dwave-inspectorapp --extra-index=https://pypi.dwavesys.com/simple

      - run: &install-dwave-system-dependencies
          name: install dwave-system dependencies
          command: |
            . env/bin/activate
            pip install dwave-drivers --extra-index=https://pypi.dwavesys.com/simple
    
      - run: &install-penaltymodel-dependencies
          name: install penaltymodel dependencies
          command: |
            . env/bin/activate
            cd penaltymodel
            pip install -r requirements.txt
            pip install penaltymodel_core/
            pip install penaltymodel_cache/
            pip install penaltymodel_maxgap/
            pip install penaltymodel_mip/
            pip install penaltymodel_lp/
            cd ..

      - run: &install-dependencies-template
          name: install dependencies
          command: |
            . env/bin/activate
            python --version
            for submodule in */; do [[ -f $submodule/tests/requirements.txt ]] && pip install -r $submodule/tests/requirements.txt; done
            pip install cython wheel twine
            pip install .

      - run: &build-ext-template
          name: build tests
          command: |
            . env/bin/activate
            python --version
            cd dimod
            python setup.py build_ext --inplace
            cd ../dwave-neal
            python setup.py build_ext --inplace
            cd ../dwave-tabu
            python setup.py build_ext --inplace
            cd ../minorminer
            python setup.py build_ext --inplace
            cd ../dwave-greedy
            python setup.py build_ext --inplace
            cd ..

      - run: &run-tests-template
          name: run unittests
          command: |
            . env/bin/activate
            python --version
            python -m unittest discover
            cd penaltymodel
            python -m unittest discover
            cd ..
            for submodule in */; do [[ -d $submodule/tests ]] && (cd $submodule; pwd; python -m unittest discover; cd ../;) done
            cd penaltymodel
            python -m unittest discover -s penaltymodel_core/
            python -m unittest discover -s penaltymodel_cache/
            python -m unittest discover -s penaltymodel_maxgap/
            python -m unittest discover -s penaltymodel_mip/
            python -m unittest discover -s penaltymodel_lp/
            cd ..

  test-3.7:
    <<: *full-test-template
    docker:
      - image: circleci/python:3.7-stretch

  test-3.6:
    <<: *full-test-template
    docker:
      - image: circleci/python:3.6-jessie

  test-3.5:
    <<: *full-test-template
    docker:
      - image: circleci/python:3.5-jessie

  test-osx-3.8: &osx-tests-template
    macos:
      xcode: "11.2.1"
    environment:
      PYTHON: 3.8.0
      HOMEBREW_NO_AUTO_UPDATE: 1

    working_directory: ~/repo

    steps: 
      - checkout

      - run: 
          name: install pyenv
          command: |
            brew install pyenv

      - restore_cache:
          keys:
            - pyenv-{{ .Environment.CIRCLE_JOB }}-xcode11.2.1

      - run:
          name: install python
          command: |
            pyenv install $PYTHON -s

      - save_cache:
          paths:
            - ~/.pyenv
          key: pyenv-{{ .Environment.CIRCLE_JOB }}-xcode11.2.1

      - run:
          name: create virtualenv
          command: |
            eval "$(pyenv init -)"
            pyenv local $PYTHON
            python -m pip install virtualenv
            python -m virtualenv env

      - run: &install-boost-osx-template
          name: install boost
          command: |
            brew install boost

      - run:
          name: install swig
          command: |
            brew install swig

      - run: *initialize-submodules

      - run: *install-dwave-inspector-dependencies

      - run: *install-dwave-system-dependencies

      - run: *install-penaltymodel-dependencies

      - run: *install-dependencies-template

      - run: *build-ext-template
        
      - run: *run-tests-template

  test-osx-3.7:
    <<: *osx-tests-template
    environment:
      PYTHON: 3.7.4
      HOMEBREW_NO_AUTO_UPDATE: 1

  test-osx-3.6:
    <<: *osx-tests-template
    environment:
      PYTHON: 3.6.5
      HOMEBREW_NO_AUTO_UPDATE: 1

  test-osx-3.5:
    <<: *osx-tests-template
    environment:
      PYTHON: 3.5.5
      HOMEBREW_NO_AUTO_UPDATE: 1

  test-doctest:
    docker:
      - image: circleci/python:3.7-stretch # as of march 2019 RTD uses 3.7

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: initialize submodules
          command: |
            git submodule init
            git submodule update

      - run:
          name: create virtualenv
          command: |
            python -m virtualenv env

      - run: *install-dependencies-template

      - run:
          name: install docs requirements
          command: |
            . env/bin/activate
            pip install -r docs/requirements.txt

      - run:
          name: build the docs
          command: |
            . env/bin/activate
            make -C docs/ html

      - store_artifacts:
          path: ./docs/_build/html

      - run:
          name: doctest
          command: |
            . env/bin/activate
            make -C docs/ doctest

  deploy:
    docker:
      - image: circleci/python:3.6-jessie

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: create virtualenv
          command: |
            python -m virtualenv env

      - run:
          name: install twine
          command: |
            . env/bin/activate
            pip install twine

      - run:
          name: verify version matches tag
          command: |
            . env/bin/activate
            pip install .
            echo $CIRCLE_TAG
            [[ "$(pip show dwave-ocean-sdk 2>/dev/null | grep Version)" == "Version: $CIRCLE_TAG" ]]

      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = dwtools-ci" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: build sdist and bdist
          command: |
            . env/bin/activate
            python setup.py sdist
            python setup.py bdist_wheel

      - run:
          name: upload
          command: |
            . env/bin/activate
            twine upload dist/*

  black-duck:
    docker:
      - image: circleci/openjdk:8-jdk-browsers

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: install python3
          command: |
            sudo apt-get update
            sudo apt-get install build-essential
            sudo apt-get install python3 python3-pip python3-dev python3-virtualenv

      - run:
          name: create virtual env
          command: |
            python3 -m virtualenv env -p python3

      # The latest version of `synopsys-detect` available to `hub-detect` script
      # is 5.3.1. Unfortunately, `pip>=20` is supported only in 6.2+.
      # So we downgrade pip to make `synopsys-detect<6.2` run.
      # The fix in 6.2 (https://github.com/blackducksoftware/synopsys-detect/pull/107/files),
      # is backwards compatible and will work with an older pip as well.
      - run:
          name: downgrade pip to make blackduck's hub-detect happy
          command: |
            . env/bin/activate
            pip install 'pip<20'

      - run:
          name: install package
          command: |
            . env/bin/activate
            pip install .

      - run:
          name: install and run hub-detect
          command: |
            . env/bin/activate
            bash <(curl -s https://blackducksoftware.github.io/hub-detect/hub-detect.sh) --blackduck.url=$BLACKDUCK_URL --blackduck.api.token=$BLACKDUCK_TOKEN --detect.code.location.name=dwave-ocean-sdk-circleci



workflows:
  version: 2

  test:
    jobs:
      - test-3.8
      - test-3.7
      - test-3.6
      - test-3.5
      - test-osx-3.8
      - test-osx-3.7
      - test-osx-3.6
      - test-osx-3.5
      - test-doctest

  deploy:
    jobs:
      - deploy:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - test-3.8
      - test-3.7
      - test-3.6
      - test-3.5
      - test-osx-3.8
      - test-osx-3.7
      - test-osx-3.6
      - test-osx-3.5
      - test-doctest
      - black-duck
